#include <iostream>
#include <chrono>
using namespace std;
void insertionSort(int arr[], int n) {
    int i, key, j;
    for (i = 1; i < n; i++) {
        key = arr[i];
        j = i - 1;

        while (j >= 0 && arr[j] > key) {
            arr[j + 1] = arr[j];
            j = j - 1;
        }
        arr[j + 1] = key;
    }
}
int main() {
    const int SIZE = 100000;
    int arr[SIZE];
    for (int i = 0; i < SIZE; i++) {
        arr[i] = rand() % SIZE;
    }
    // get the start time
    auto start = chrono::steady_clock::now();
    // perform the sort
    insertionSort(arr, SIZE);
    // get the end time
    auto end = chrono::steady_clock::now();
    // calculate the elapsed time in milliseconds
    auto elapsed = chrono::duration_cast<chrono::milliseconds>(end - start).count();
    cout << "Time taken by Insertion Sort for " << SIZE << " elements: " << elapsed << " milliseconds" << endl;
    return 0;
}
